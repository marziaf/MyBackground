% prepariamo tutti i possibili parametri che andranno ad essere
% modificabili per il calcolo

XBL_PARAMS = ...
    [32, 4, 4, 2, 1, 2; 32, 4, 4, 2, 1, 2; 32, 4, 4, 2, 1, 2; 32, 4, 4, 2, 1, 2; 32, 4, 4, 2, 1, 2; ...
    32, 4, 4, 2, 1, 2; 32, 4, 4, 2, 1, 2; 32, 4, 4, 2, 1, 2; 32, 4, 4, 2, 1, 2; 32, 4, 4, 2, 1, 2; ...
    32, 4, 4, 2, 1, 2; 32, 4, 4, 2, 1, 2; 32, 4, 4, 2, 1, 2; 32, 4, 4, 2, 1, 2; 32, 4, 4, 2, 1, 2; ...
    32, 4, 4, 2, 1, 2; 32, 4, 4, 2, 1, 2; 32, 4, 4, 2, 1, 2; 32, 4, 4, 2, 1, 2; 32, 4, 4, 2, 1, 2];
YBL_PARAMS = ...
    [32, 4, 4, 2, 1, 2; 32, 4, 4, 2, 1, 2; 32, 4, 4, 2, 1, 2; 32, 4, 4, 2, 1, 2; 32, 4, 4, 2, 1, 2; ...
    32, 4, 4, 2, 1, 2; 32, 4, 4, 2, 1, 2; 32, 4, 4, 2, 1, 2; 32, 4, 4, 2, 1, 2; 32, 4, 4, 2, 1, 2; ...
    32, 4, 4, 2, 1, 2; 32, 4, 4, 2, 1, 2; 32, 4, 4, 2, 1, 2; 32, 4, 4, 2, 1, 2; 32, 4, 4, 2, 1, 2; ...
    32, 4, 4, 2, 1, 2; 32, 4, 4, 2, 1, 2; 32, 4, 4, 2, 1, 2; 32, 4, 4, 2, 1, 2; 32, 4, 4, 2, 1, 2];
TBL_PARAMS = ...
    [48, 24,  8,  4, 2, 2; 48, 24,  8,  4, 2, 2; 48, 24,  8,  4, 2, 2; 48, 24,  8,  4, 2, 2; 48, 24,  8,  4, 2, 2;...
    48, 24,  8,  4, 2, 2; 48, 24,  8,  4, 2, 2; 48, 24,  8,  4, 2, 2; 48, 24,  8,  4, 2, 2; 48, 24,  8,  4, 2, 2; ...
    48, 24,  8,  4, 2, 2; 48, 24,  8,  4, 2, 2; 48, 24,  8,  4, 2, 2; 48, 24,  8,  4, 2, 2; 48, 24,  8,  4, 2, 2; ...
    48, 24,  8,  4, 2, 2; 48, 24,  8,  4, 2, 2; 48, 24,  8,  4, 2, 2; 48, 24,  8,  4, 2, 2; 48, 24,  8,  4, 2, 2];
VTH_PARAMS = ...
    [10, 20, 10, 10, 10, 10; 10, 20, 30, 10, 10, 10; 10, 20, 30, 40, 10, 10; 10, 20, 30, 40, 50, 10; 10, 20, 50, 50, 50, 10;...
    10, 20, 10, 10, 10, 10; 10, 20, 30, 10, 10, 10; 10, 20, 30, 40, 10, 10; 10, 20, 30, 40, 50, 10; 10, 20, 50, 50, 50, 10;...
    10, 20, 10, 10, 10, 10; 10, 20, 30, 10, 10, 10; 10, 20, 30, 40, 10, 10; 10, 20, 30, 40, 50, 10; 10, 20, 50, 50, 50, 10;...
    10, 20, 10, 10, 10, 10; 10, 20, 30, 10, 10, 10; 10, 20, 30, 40, 10, 10; 10, 20, 30, 40, 50, 10; 10, 20, 50, 50, 50, 10;];
N_ITERATIONS_PARAMS = ...
    [5; 5; 5; 5; 5;...
    5; 5; 5; 5; 5;...
    5; 5; 5; 5; 5;...
    5; 5; 5; 5; 5];
ETH_PARAMS = ...
    [0.4; 0.4; 0.4; 0.4; 0.4;...
    0.4; 0.4; 0.4; 0.4; 0.4;...
    0.4; 0.4; 0.4; 0.4; 0.4;...
    0.4; 0.4; 0.4; 0.4; 0.4];
EMETH_PARAMS = ...
    ['Canny'; 'Canny'; 'Canny'; 'Canny'; 'Canny';...
    'Canny'; 'Canny'; 'Canny'; 'Canny'; 'Canny';...
    'Canny'; 'Canny'; 'Canny'; 'Canny'; 'Canny';...
    'Canny'; 'Canny'; 'Canny'; 'Canny'; 'Canny'];
SIGMA_PARAMS = ...
    [20, 20, 1; 20, 20, 1; 20, 20, 1; 20, 20, 1; 20, 20, 1;...
    3, 3, 1; 3, 3, 1; 3, 3, 1; 3, 3, 1; 3, 3, 1;...
    8, 8, 1; 8, 8, 1; 8, 8, 1; 8, 8, 1; 8, 8, 1;...
    12, 12, 1; 12, 12, 1; 12, 12, 1; 12, 12, 1; 12, 12, 1];
FILTER_THRESHOLD_PARAMS = ...
    [0.2; 0.2; 0.2; 0.2; 0.2;
    0.2; 0.2; 0.2; 0.2; 0.2;
    0.2; 0.2; 0.2; 0.2; 0.2;
    0.2; 0.2; 0.2; 0.2; 0.2];
FILTER_ON_PARAMS = ...
    [true; true; true; true; true;
    true; true; true; true; true;
    true; true; true; true; true;
    true; true; true; true; true];

% impostazioni di debug
DEBUG_VIDEO_EXPORT = false;

% input ed output
% IDEA se l'input è a dimenioni meh croppo e le 3 parti rimanenti uso
% l'algoritmo su di loro poi joino
input_name = 'progetto\input\ex560-end.avi';
output_name = 'ex';

for ( param_row = 1:size(N_ITERATIONS_PARAMS) ) % lo uso solo per la size :D
    
    disp(['trying with parrameters row ', num2str(param_row),' / ',num2str(size(N_ITERATIONS_PARAMS))]);
    
    % piccola ottimizzazione per non sprecare creazioni dei frame e
    % dell'edge...
    disp('->preparing settings...');
    proj_algSettings;
    if ( (param_row == 1) ||... 
        ~isequal([XBL_PARAMS(param_row-1,:),YBL_PARAMS(param_row-1,:),TBL_PARAMS(param_row-1,:)],[XBL_PARAMS(param_row,:),YBL_PARAMS(param_row,:),TBL_PARAMS(param_row,:)]) )
        % i parametri ed i dati creati videoPrepare non sono mai modificati,
        % non servono backup
        disp('->preparing video...');
        proj_videoPrepare;
    end
    
    if ((param_row == 1) ||...
        ~isequal(EMETH_PARAMS(param_row-1),EMETH_PARAMS(param_row)) ||  ~isequal(ETH_PARAMS(param_row-1),ETH_PARAMS(param_row)) ||...
        ~isequal(XBL_PARAMS(param_row-1,1),XBL_PARAMS(param_row,1)) ) %devo contare anche il caso in cui cambi la dimensione!
        % i parametri ed i dati creati edgeMaskCreate non sono mai modificati,
        % non servono backup
        disp('->preparing edge mask');
        proj_edgeMaskCreate;
    end
       
    if ( (param_row == 1) ||... 
            ~isequal([XBL_PARAMS(param_row-1,:),YBL_PARAMS(param_row-1,:),TBL_PARAMS(param_row-1,:), VTH_PARAMS(param_row-1,:)],...
                [XBL_PARAMS(param_row,:),YBL_PARAMS(param_row,:),TBL_PARAMS(param_row,:), VTH_PARAMS(param_row,:)]) )
        
        N_ITERATIONS = 1;
        disp('->preparing low-level mask');
        proj_moveMaskCreate;
        disp('->creating background candidate 0');
        proj_createBackgroundCandidate;
        
        %salviamo il bg_cand perchè servirà per futuri casi in cui non sarà
        %modificata questa sezione per risparmiare tempo
        bg_cand_bcp = background_candidate;
        bg_cand_mask_bcp = background_candidate_mask;
        
        % anche qui sopra non necessito di backup perchè poi non devo
        % riutilizzarli, e save_mask la ricreo da zero ora
        N_ITERATIONS = N_ITERATIONS_PARAMS(param_row);
        disp('->preparing high-level mask');
        proj_moveMaskCreate;
        
        sv_mask_bcp = save_mask;
    end
    
    % nel caso non siano state ricalcolate in questo giro perchè i
    % parametri non sono cambiati, devo ricaricare la save_mask, visto che
    % il prossimo comando la modifica
    if (FILTER_ON_PARAMS(param_row))
        save_mask = sv_mask_bcp;
        proj_moveMaskSmoothClip;
    end
    
    %nel caso non siano state ricalcolate in questo giro perchè i
    % parametri non sono cambiati, devo ricaricare background_candidate e
    % la sua maschera, perchè il prossimo comando la modifica man mano per
    % fare i propri calcoli
    disp('->construction of background');
    background_candidate = bg_cand_bcp;
    background_candidate_mask = bg_cand_mask_bcp;
    proj_constructBackgroundFromSaveMask;
    
    %ok salviamo il background ottenuto
    actual_filename = strcat('progetto\output\costbg\', ...
        int2str(X_BLOCK_LENGTH),'-',int2str(T_BLOCK_LENGTH),'-',int2str(VARIANCE_THRESHOLD),...
        '-3D',int2str(FILTER_ON_PARAMS(param_row)),'-',...
        int2str(FILTER_SIGMA),'-',int2str(floor(100*FILTER_THRESHOLD)),...
        '-', output_name,'.png');
    disp(['->saving at',actual_filename]);
    imwrite(background_candidate, actual_filename);
end